[["so-what-do-these-files-mean.html", "5 So What Do These Files Mean? 5.1 Bookdown Simple Explanation 5.2 Open in RStudio 5.3 Explaining RStudio 5.4 Build the book 5.5 File Setup Explanation 5.6 Push to GitHub via RStudio", " 5 So What Do These Files Mean? Ok now we have our workshop locally (on our computer), which is made up of all these files and folders? Before we dive deep into what to do with these folders, let’s explore how bookdown actually works and how to understand RStudio. 5.1 Bookdown Simple Explanation Here is a general summary of how Bookdown creates html websites from .Rmd files. Essentially, knitr renders and runs all the code, and the outputs are converted into markdown. After knitr, we essentially have a bunch of only markdown files. Pandoc translates this markdown into html, so that we get a website! It can be helpful to know when and how these packages work, to help debug later on! Now, let’s figure out RStudio. Skip to file setup if you already know how to use RStudio (and it’s built in git control window). 5.2 Open in RStudio Enter the folder you just git cloned using Findr/File Command, it should be titled “[workshop-name]”. Right click on [workshop-name].Rproj and press “Open in RStudio”. There is only one file with this file extension. The .Rproj file is what you will open each time you want to work on this workshop! You must explicitly open the .Rproj file to build properly! A RStudio window should open up and look something like the image below. 5.3 Explaining RStudio In the bottom left, have our console and other debug related windows (such as terminal!). Any code we run will appear in the console. We can access the terminal (just like editing in the Terminal app) under the “Terminal” tab. In the bottom right, we have all of our files and subfolders. These files will be explained below. This window also contains helpful views, like “Viewer” and “Plots”. We will touch on these later. Try opening index.Rmd: a new pane will open in the top left that shows the contents of index.Rmd. This is where we will be editing our files! Notice, the “Knit” button. In your top right, we have a different window with more different views. The most relevant windows to us are the “Build” and the “Git” windows. No “Git” Window? Try closing (and maybe even restarting RStudio) and then reopening it. A “Git” tab should appear to the right of the “Build” tab and to the left of the “Tutorial” tab. 5.4 Build the book Try pressing “Build Book” within the “Build” window. Your build window is going to fill up with text, and soon, a website is going to pop-up as your new window. This is the website you will be editing to create your workshop! By building the book, all of these files were compiled and converted to .html files, that create a website. Each time we make local changes to our files and we want them to appear in our website, we need to rebuild the book. Note that each time we build our book, the files we edited will be saved first (we don’t have to save before building!). 5.4.1 Other Ways to Build Your Book Build the book from the R console: bookdown::render_book() Press the keyboard buttons: cmd + shift + B (macOS) OR ctrl + shift + B (windows) 5.4.2 Knit Your Book Building can take a long time. If you are editing just one file, you can press the “Knit” button that is at the top of the window with your file. This will run the code in the page, and show you what that page would look like in the website (as well as saving that file). Note: Other pages in your website will not update. A quicker way to knit is using the keboard controls cmd + shift + K (macOS) OR ctrl + shift + K (Windows) 5.4.3 Preview Your Book If you want live updates to your changes, you can preview the page as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book”, or from the R console (in the bottom left window): bookdown::serve_book() But which files do we edit? Well alas, it’s time to discuss the file setup. 5.5 File Setup Explanation Recall: Hence, all the .Rmd files create a page in the produced website! To create more pages, you will be creating more .Rmd files. Here is a tree diagram of the bookdown template setup. (Note that this mimics how RStudio displays the files, if your RStudio shows these template files in a different order, right click your file window and press “Reload”) Note: only relevant files or files you might be concerned about are explained in blue. If there is no explanation, you can safely assume you do not have to worry about it. bookdown-template ├── _404.md # This becomes your 404 page. This is the only file that can become a page that can also be either a .md or .Rmd file! ├── _bookdown.yml # a config file, you most likely won&#39;t have to edit it unless you want additional configuration settings ├── _bookdown_files ├── _main_files └── ... # [in case of confusion: image and pdf output files] ├── _output.yml # a config file, RC/workshop team will have to edit a few things (the workshop name, sponsor images, repo link) ├── .gitignore ├── .Rhistory ├── 010-course-schedule.Rmd # --&gt; &quot;Course Schedule&quot; section ├── 011-content-files.Rmd # --&gt; &quot;Pre-workshop Materials&quot; and &quot;Computing Setup &amp; Downloads&quot; section ├── 012-meet-your-fac.Rmd # --&gt; &quot;Meet Your Faculty&quot; section ├── 020-module-1.Rmd #--&gt; &quot;Module 1&quot;, &quot;Lecture, and &quot;Lab&quot; section ├── 030-module-2.Rmd ├── README.md # README file that has some helpful explanations, consider reading this before starting to edit (along with this documentation!) ├── book.bib ├── bookdown-template.Rproj # always open this file in RStudio, opening this helps bookdown understand what to build ├── content-files # store all files from your modules here (ex. data sets, empty code worksheets) └── sample-pdf.pdf ├── docs └── ... # html files &amp; other generated content ├── img # folder where you should store all your images ├── bioinformatics.ca-logo.svg ├── faculty # store all images of faculty in this folder ├── michelle-brazas.jpg └── nia-hughes.jpeg ├── favicon.ico └── sponsors # store all sponsor logos/titles in this folder └── Your-Sponsor-Here.svg ├── index.Rmd # landing page --&gt; &quot;Welcome&quot; section ├── packages.bib ├── preamble.tex └── style.css # css styling options are defined here - feel free to add your own styling features 5.5.0.0.0.1 _output.yml &amp; _bookdown.yml {-} 2 important files are the _output.yml files and the _bookdown.yml files. They help tell bookdown what we want and what to do, especially when making our website. You will only have to edit _output.yml a bit. The _output.yml file creates the table of contents/sidebar you see on the left of the workshop. It is written in HTML, which is why it looks so different. There are 3 things either the RC or the workshop team will need to do: 1. Change the workshop name: [YOUR WORKSHOP NAME] on line 7 2. Add your sponsors: Replace “Your-Sponsor-Here.svg” with the file name of your sponsors name/logo. Remeber to place these files inside the ./img/sponsors/ folder. 3. Replace your workshop repo edit link. - USERNAME = organization name = bioinformaticsdotca - REPO = your workshop repo name - BRANCH = main Organizing the Table of Contents The order of the sidebar is completely dependent on the alphabetical order of the files (see your bottom right window pane! The order is generally the same as the order shown in the RStudio file window pane). Our template has numbering first, to help ease our understanding and organization of files. The only file without this is index.Rmd, since as the landing page we can not change the file name. index.Rmd The only .Rmd that must have some configuration details is the landing page: index.Rmd. This is what fills up the beginning of the index.Rmd file, before the ---, which tells bookdown to stop looking for configuration information. .Rmd Files Let’s move on to discussing the breakdown of the .Rmd files. Each new page is defined by a new header, which starts with #, each subheader has increasingly more # symbols (##, ###, and more all create smaller subheaders). Try to have only 1 single # as a header on one page! (You may get warnings otherwise). How to Create a New File You can create new files anywhere. CBW Organization Files Bookdown’s Wesbite Building Files 404 Page 5.6 Push to GitHub via RStudio Now, we know what our files mean and how to edit them. How do we get this onto GitHub? We can write git commands into our Terminal/Command Prompt, or alternatively (and more easily), RStudio has a built-in git interface. Now, we will be able to see a Git window in the top right. Click “Git” to open this window. RStudio with Git window open Let’s say we only edited index.Rmd, now we see the newly edited files. Changed files that need to be updated on GitHub will show up in this window, like how index.Rmd is seen above. (Do not worry too much about .DS_Store and .gitignore do.) Let’s try to push this change to GitHub. Select all the edited files. Then, click the Commit button, which appears above your selected items. A window pane will appear (shown below). Add a commit message in the corresponding box, and then press commit below it. A new window will show up, detailing your updates. Close this window and then press Push to push your updates to GitHub. Now, we’re done! We should see the updates on GitHub now. Also note, if we ever want to pull updates from GitHub, there is also a Pull button in the Git window within RStudio! Git pushing puts your edits onto GitHub, git pulling takes the edits make on GitHub, and brings them to your local computer. For example, if one of your workshop team members made an edit, you want to have that edit on your computer before you start editing! It’s a good idea to do this before you start editing, in case somehow your edits conflicts with their edits. Git pushing will automatically update the website, you can see the updates and progress in the actions window we saw previously. (Check out your website on the web once it’s done deploying!) "],["404.html", "Error 404: This page does not exist.", " Error 404: This page does not exist. This page does not exist anymore! Try going back to the workshop homepage or the bioinformatics.ca homepage. "]]
